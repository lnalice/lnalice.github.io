<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage on lnalice&#39;s Digital Garden 🌏</title>
    <link>https://lnalice.github.io/</link>
    <description>Recent content in Homepage on lnalice&#39;s Digital Garden 🌏</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lnalice.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>chapter0</title>
      <link>https://lnalice.github.io/java/chapter0/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lnalice.github.io/java/chapter0/</guid>
      <description>다음을 이해하고 시작하자
인터페이스 API 관점 : 어떤 기능성을 제공하는 클래스나 메서드 JAVA : 클래스와 유사하게 어떤 메서드 집합 제네릭타입 자바 컬렉션 프레임워크 특히, ArrayList, LinkedList를 이해하자 Apache Ant ant를 이해하고 연습해 보았다. apt install ant 참고 사이트 : https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;amp;blogId=asura71&amp;amp;logNo=20008681351 /src/build.properties jar.home=../../../../../../../Program Files/Java/jdk-16.0.2 main.classpath=./classes /src/build.xml &amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt; &amp;lt;project name=&amp;#34;mytest&amp;#34; default = &amp;#34;compile&amp;#34;&amp;gt; &amp;lt;property file = &amp;#34;build.properties&amp;#34; /&amp;gt; &amp;lt;target name=&amp;#34;compile&amp;#34; depends = &amp;#34;init&amp;#34;&amp;gt; &amp;lt;javac srcdir=&amp;#34;.&amp;#34; destdir=&amp;#34;${main.classpath}&amp;#34;&amp;gt; &amp;lt;classpath refid = &amp;#34;classpath&amp;#34; /&amp;gt; &amp;lt;/javac&amp;gt; &amp;lt;echo&amp;gt;compilation is completed!</description>
    </item>
    
    <item>
      <title>chapter1</title>
      <link>https://lnalice.github.io/oop/chapter1/</link>
      <pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lnalice.github.io/oop/chapter1/</guid>
      <description>&amp;lsquo;스프링 입문을 위한 자바 객체 지향의 원리와 이해&amp;rsquo; 책을 바탕으로 쓰여졌다.
기계어에서 객체 지향 프로그래밍 언어로 1. 기계어 0과 1로 이뤄진 언어&amp;hellip; 너무 비인간적이지 않는가
2. 어셈블리어 &amp;ldquo;기계어의 명령들을 일상 용어로 표현하고 이걸 기계가 알 수 있는 기계어로 번역하게 하면 어떨까?&amp;rdquo;
그래, 기계어와 일상 용어를 일대일 매칭하는 코드표가 필요하다. 니모닉(Mnemonic)과 기계어의 일대일 매칭 코드표를 만들었고 이 표를 어셈블리(Aseembly)라고 불렀다. 하지만, CPU마다 실해할 수 있는 기계어가 다르기 때문에, CPU 별로 어셈블리어( Assembly Language)가 달랐다.</description>
    </item>
    
    <item>
      <title>1. Theme Installation</title>
      <link>https://lnalice.github.io/algorithm/installation/</link>
      <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lnalice.github.io/algorithm/installation/</guid>
      <description>Create a new hugo website or open your existing hugo site.
Add the theme to your hugo site Use as a git submodule:
git submodule add https://github.com/apvarun/digital-garden-hugo-theme.git themes/digitalgarden Clone the repository (one-off, updating the theme may be harder later):
git clone https://github.com/apvarun/digital-garden-hugo-theme.git themes/digitalgarden Setup Copy package.json, package-lock.json and tailwind.config.js files from the theme/digitalgarden folder to the root folder of your the website Run npm install to install required packages for theme Run npm i -g postcss-cli to use PostCSS with Hugo build Set theme = &#39;digitalgarden&#39; in config.</description>
    </item>
    
    <item>
      <title>5. Newsletter</title>
      <link>https://lnalice.github.io/algorithm/newsletter/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lnalice.github.io/algorithm/newsletter/</guid>
      <description>The theme supports a subscription to multiple newsletter providers.
Buttondown Substack Revue Buttondown [Params.newsletter.provider] = &amp;ldquo;buttondown&amp;rdquo;
Copy the action url from your buttondown admin dashboard and add it to [Params.newsletter.path] in config.toml
Substack [Params.newsletter.provider] = &amp;ldquo;substack&amp;rdquo;
Setting up substack is the easiest. Just add your substack newsletter URL (applicable for custom domains also) to [Params.newsletter.path] in config.toml
Note that since substack doesn&amp;rsquo;t have a native API for subscription. The theme uses the api from substackapi.</description>
    </item>
    
    <item>
      <title>6. Google Analytics</title>
      <link>https://lnalice.github.io/algorithm/google-analytics/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lnalice.github.io/algorithm/google-analytics/</guid>
      <description>Digital garden theme utilizes the Hugo&amp;rsquo;s [internal template](internal templates) for Google analytics and so both Google analytics v3 and GA v4 (gtag) are supported.
Add your UA-PROPERTY_ID or G-MEASUREMENT_ID to config.toml
Google Analytics v3 (analytics.js) googleAnalytics = &amp;#39;UA-PROPERTY_ID&amp;#39; Google Analytics v4 (gtag.js) googleAnalytics = &amp;#39;G-MEASUREMENT_ID&amp;#39; → Configure Metatags</description>
    </item>
    
    <item>
      <title>7. Metatags</title>
      <link>https://lnalice.github.io/algorithm/metatags/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lnalice.github.io/algorithm/metatags/</guid>
      <description>Metatags are used to provide additional information about the page, usualy used by search engines and social media websites / apps. It allows to customize your page&amp;rsquo;s title, description, preview image and more.
Configure default tags // config.toml
title = &amp;#34;Personal Digital Garden&amp;#34; [Params] description = &amp;#34;My Digital Garden on the Internet&amp;#34; images = [&amp;#39;/digital-garden-logo.png&amp;#39;] Setting the above values will be used as default for all pages unless its overridden in a specific page&amp;rsquo;s markdown.</description>
    </item>
    
  </channel>
</rss>
